name: Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_backend:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Set Environment Variables
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "JWT_ISSUER=${{ secrets.JWT_ISSUER }}" >> $GITHUB_ENV
          echo "JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}" >> $GITHUB_ENV
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> $GITHUB_ENV
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> $GITHUB_ENV
          echo "TWILIO_FROM_NUMBER=${{ secrets.TWILIO_FROM_NUMBER }}" >> $GITHUB_ENV
          echo "BACKEND_DATABASE_CONNECTION_STRING=${{ secrets.BACKEND_DATABASE_CONNECTION_STRING }}" >> $GITHUB_ENV
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> $GITHUB_ENV
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> $GITHUB_ENV
          echo "EMAIL_SENDER_NAME=${{ secrets.EMAIL_SENDER_NAME }}" >> $GITHUB_ENV
          echo "EMAIL_SENDER_EMAIL=${{ secrets.EMAIL_SENDER_EMAIL }}" >> $GITHUB_ENV
          echo "EMAIL_SENDER_PASSWORD=${{ secrets.EMAIL_SENDER_PASSWORD }}" >> $GITHUB_ENV

      - name: Restore backend dependencies
        run: dotnet restore Backend/WebMedicalApplication/BackendMedicalApplication/BackendMedicalApplication.csproj

      - name: Build backend
        run: dotnet build Backend/WebMedicalApplication/BackendMedicalApplication/BackendMedicalApplication.csproj --configuration Release --no-restore

      - name: Publish backend
        run: dotnet publish Backend/WebMedicalApplication/BackendMedicalApplication/BackendMedicalApplication.csproj --configuration Release --no-restore --output ./publish

      - name: Deploy backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: BackendMedicalApplication
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
